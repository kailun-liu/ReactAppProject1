{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/AvatarStyle.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","style","className","alt","src","Cardlist","robots","cardComponent","map","robot","i","AvatarStyle","onStyleChange","onClick","type","value","SearchBox","searchField","onSearchChange","onChange","types","placeholder","Scroll","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","event","target","fetch","then","response","json","users","filterZombies","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffa75498.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nconst Card = (props) => {\r\n    const { id, name, email, style }= props;\r\n    return (\r\n    <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt = 'robots' src = {`https://robohash.org/${id}?set=${style}&size=200x200`}/>\r\n      <div>\r\n       <h5>{name}</h5>\r\n       <p>{email}</p>\r\n      </div>\r\n    </div> \r\n    ); \r\n}\r\nexport default Card;","import React, {Component} from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = (props) => {\r\n    const { robots, style } = props;\r\n    const cardComponent = robots.map((robot, i) => {\r\n      return (<Card \r\n        key = {i} \r\n        id = { robot.id } \r\n        name = { robot.name } \r\n        email = { robot.email }\r\n        style = {style}\r\n        />);\r\n    });\r\n    return (\r\n    <div>\r\n    {cardComponent}\r\n    </div> \r\n    ); \r\n}\r\nexport default Cardlist;","import React, {Component} from 'react';\r\n\r\n\r\nconst AvatarStyle = ({onStyleChange}) => {\r\n    return (\r\n      <div >\r\n        <button className='f6 link dim ph3 pv2 mb2 dib white bg-light-purple pa3 ma2' key='set1' onClick= {onStyleChange} type=\"button\" value='set1' >Robot</button>\r\n        <button className='f6 link dim ph3 pv2 mb2 dib white bg-light-purple pa3 ma2' key='set2' onClick= {onStyleChange} type=\"button\" value='set2' >Alien</button>\r\n        <button className='f6 link dim ph3 pv2 mb2 dib white bg-light-purple pa3 ma2' key='set3' onClick= {onStyleChange} type=\"button\" value='set3' >Avatar</button>\r\n        <button className='f6 link dim ph3 pv2 mb2 dib white bg-light-purple pa3 ma2' key='set4' onClick= {onStyleChange} type=\"button\" value='set4' >Cat</button>\r\n        <button className='f6 link dim ph3 pv2 mb2 dib white bg-light-purple pa3 ma2' key='set5' onClick= {onStyleChange} type=\"button\" value='set5' >Human</button>\r\n      </div>\r\n    ); \r\n}\r\nexport default AvatarStyle;","import React, {Component} from 'react';\r\n\r\nconst SearchBox = ({searchField, onSearchChange}) => {\r\n    return (\r\n      <div className = 'pa2'>\r\n        <input \r\n        onChange={onSearchChange} \r\n        className = 'pa3 ba b--green bg-lightest-blue' \r\n        types='search' \r\n        placeholder='search name'/>\r\n      </div>    \r\n    ); \r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return ( \r\n    \t<div style = {{overflowY:'scroll', border:'1px solid black', height:'800px'}}>\t\r\n    \t{props.children}\r\n    \t</div>\r\n    ); \r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError:false\r\n    }\r\n  }\r\n  componentDidCatch(error, info){\r\n\r\n    this.setState({ hasError:true });\r\n  }\r\n\r\n  render() {\r\n      if (this.state.hasError) {\r\n        return <h1>That's not good</h1>\r\n      }\r\n      else\r\n      {\r\n        return this.props.children\r\n      }\r\n    }\r\n  }\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\nimport Cardlist from '../components/Cardlist';\nimport AvatarStyle from '../components/AvatarStyle';\nimport SearchBox from '../components/SearchBox';\nimport { robots } from '../components/robots';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css'\n \n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {  \n      robots:[],\n      searchField:'',\n      style:''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json() )\n      .then(users=>this.setState({robots:users}))\n  }\n\n  onSearchChange = (event) => { //using arrow functions to make sure this (context) is where it was created.\n    this.setState({searchField:event.target.value})\n  }\n\n  onStyleChange = (event) => {\n    this.setState({style:event.target.value})\n  }\n\n  render() {\n    const filterZombies = this.state.robots.filter((robot)=>robot.name.toLowerCase().includes(this.state.searchField.toLowerCase()));\n    if (this.state.robots)\n    {\n        return (\n        (<div className='tc'>\n          <p id = 'p'>Friends</p>\n          <AvatarStyle onStyleChange = {this.onStyleChange}/>\n          <SearchBox onSearchChange={this.onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary>\n              <Cardlist robots = { filterZombies } style = {this.state.style} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>)\n       )\n    }\n    else\n    {\n        return <h1>Loading</h1>\n    }\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}